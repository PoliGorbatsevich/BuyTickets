import React from "react";
import RegistrationForm from "../components/RegistrationForm";
import {axiosInstance} from "../AxiosConfig";
import LogInForm from "../components/LogInForm";
import storage from "../storage"
import toast from "react-hot-toast";
import {Navigate} from "react-router-dom";

const registration_url = "auth/registration"
const login_url = "auth/token"


class Authpage extends React.Component{
    constructor(props) {
        super(props);
        this.state = {
            user: {},
            loginForm: true,
            isLogined: false
        }
        this.registerUser = this.registerUser.bind(this)
        this.loginUser = this.loginUser.bind(this)
    }

    render(){
        if(!this.state.isLogined)
            return(
                <div>
                    <main>
                        <div className="info">
                        <h1>BuyTickets</h1>
                        <h2>–í—ã –ª—é–±–∏—Ç–µ —Ç–µ–∞—Ç—Ä –∏ —á–∞—Å—Ç–æ –ø–æ—Å–µ—â–∞–µ—Ç–µ –µ–≥–æ —Å–ø–µ–∫—Ç–∞–∫–ª–∏? –¢–æ–≥–¥–∞ –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –≤—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –≤–∞–∂–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –±–∏–ª–µ—Ç—ã, —á—Ç–æ–±—ã –Ω–µ –æ–∫–∞–∑–∞—Ç—å—Å—è –±–µ–∑ –Ω–∏—Ö –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è. –°–µ–≥–æ–¥–Ω—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –±–∏–ª–µ—Ç–æ–≤ –≤ —Ç–µ–∞—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–∞ –∏ –æ–ø–ª–∞—Ç–∏—Ç—å –±–∏–ª–µ—Ç—ã –æ–Ω–ª–∞–π–Ω. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∞–∫–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–∞—à–µ –º–µ—Å—Ç–æ –Ω–∞ —Å–ø–µ–∫—Ç–∞–∫–ª–µ –±—É–¥–µ—Ç –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ, –∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –≤ —É—é—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ –∏–∑ —Ç–∞–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –æ—Ü–µ–Ω–∏—Ç–µ –≤—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –æ–Ω–ª–∞–π–Ω-–ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤ –≤ —Ç–µ–∞—Ç—Ä!</h2>
                        </div>
                    </main>
                    <aside>
                        {this.state.loginForm ?
                            <LogInForm loginUser={this.loginUser}/> :
                            <RegistrationForm registerUser={this.registerUser}/>
                        }
                        {this.state.loginForm ?
                            <button type="button" onClick={() =>{
                                this.setState({loginForm: !this.state.loginForm})
                                }}>–£ –º–µ–Ω—è –µ—â–µ –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞</button>:
                            <button type="button" onClick={() =>{
                                this.setState({loginForm: !this.state.loginForm})
                            }}>–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>
                        }
                    </aside>
                </div>
            )
        else
            return(<Navigate to="/performance"/>)
    }

    registerUser(user){
        if (user.username.length === 0 || user.password.length === 0 || user.email.length === 0 || user.password1.length === 0){
            toast.error("–¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        }
        else {
            axiosInstance.post(registration_url, user)
                .then((response) => {
                    toast("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å", {icon: 'ü•≥'})
                    this.setState({loginForm: !this.state.loginForm})
                    this.setState({isLogined: true})
                }).catch(err => {
                toast.error(err.response.data.detail)
                this.setState({isLogined: false})
            })
        }
    }

    loginUser(user){
        if (user.username.length === 0 || user.password.length === 0){
            toast.error("–¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        }
        else {
            axiosInstance.post(login_url,
                new URLSearchParams({
                    username: user.username,
                    password: user.password,
                })).then((response) => {
                toast("–£—Ä–∞! –í—ã —Å–Ω–æ–≤–∞ —Å –Ω–∞–º–∏!", {icon: '‚ò∫Ô∏è'})
                storage.setToken(response.data['access_token'])
                storage.setRole(response.data['role'])
                console.log(response.data);
                this.setState({isLogined: true})
            }).catch(err => {
                toast.error(err.response.data.detail)
            })
        }
    }
}

export default Authpage